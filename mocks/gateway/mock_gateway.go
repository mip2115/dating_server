// Code generated by MockGen. DO NOT EDIT.
// Source: code.mine/dating_server/gateway (interfaces: Gateway)

// Package gatewaymocks is a generated GoMock package.
package gatewaymocks

import (
	reflect "reflect"

	types "code.mine/dating_server/types"
	gomock "github.com/golang/mock/gomock"
)

// MockGateway is a mock of Gateway interface.
type MockGateway struct {
	ctrl     *gomock.Controller
	recorder *MockGatewayMockRecorder
}

// MockGatewayMockRecorder is the mock recorder for MockGateway.
type MockGatewayMockRecorder struct {
	mock *MockGateway
}

// NewMockGateway creates a new mock instance.
func NewMockGateway(ctrl *gomock.Controller) *MockGateway {
	mock := &MockGateway{ctrl: ctrl}
	mock.recorder = &MockGatewayMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGateway) EXPECT() *MockGatewayMockRecorder {
	return m.recorder
}

// DeleteUserImageFromS3 mocks base method.
func (m *MockGateway) DeleteUserImageFromS3(arg0 *string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteUserImageFromS3", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteUserImageFromS3 indicates an expected call of DeleteUserImageFromS3.
func (mr *MockGatewayMockRecorder) DeleteUserImageFromS3(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteUserImageFromS3", reflect.TypeOf((*MockGateway)(nil).DeleteUserImageFromS3), arg0)
}

// GetYoutubeVideoDetails mocks base method.
func (m *MockGateway) GetYoutubeVideoDetails(arg0 *string) (*types.UserVideoItem, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetYoutubeVideoDetails", arg0)
	ret0, _ := ret[0].(*types.UserVideoItem)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetYoutubeVideoDetails indicates an expected call of GetYoutubeVideoDetails.
func (mr *MockGatewayMockRecorder) GetYoutubeVideoDetails(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetYoutubeVideoDetails", reflect.TypeOf((*MockGateway)(nil).GetYoutubeVideoDetails), arg0)
}

// GetYoutubeVideoID mocks base method.
func (m *MockGateway) GetYoutubeVideoID(arg0 *string) (*string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetYoutubeVideoID", arg0)
	ret0, _ := ret[0].(*string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetYoutubeVideoID indicates an expected call of GetYoutubeVideoID.
func (mr *MockGatewayMockRecorder) GetYoutubeVideoID(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetYoutubeVideoID", reflect.TypeOf((*MockGateway)(nil).GetYoutubeVideoID), arg0)
}

// UploadUserImageToS3 mocks base method.
func (m *MockGateway) UploadUserImageToS3(arg0 string, arg1 []byte, arg2 int64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UploadUserImageToS3", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// UploadUserImageToS3 indicates an expected call of UploadUserImageToS3.
func (mr *MockGatewayMockRecorder) UploadUserImageToS3(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UploadUserImageToS3", reflect.TypeOf((*MockGateway)(nil).UploadUserImageToS3), arg0, arg1, arg2)
}
